/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN 111ActionsGenerated.js PLEASE EDIT ../111Actions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import 111Api from "../../../api/111Api";

let actionsFunction = {
  
  // Reset reducer
  reset: function() {
    return { type: types.RESET_111 };
  },

  //CRUD METHODS

  // Create 111
  create111: function(111) {
    return function(dispatch) {
      return 111Api
        .create111(111)
        .then(111 => {
          dispatch(actionsFunction.create111Success(111));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  create111Success: function(111) {
    return { type: types.CREATE_111_SUCCESS, payload: 111 };
  },


  // Delete 111
  delete111: function(id) {
    return function(dispatch) {
      return 111Api
        .delete111(id)
        .then(111 => {
          dispatch(actionsFunction.delete111Success(111));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  delete111Success: function(111) {
    return { type: types.DELETE_111_SUCCESS, payload: 111 };
  },


  // Get 111
  load111: function(id) {
    return function(dispatch) {
      return 111Api
        .getOne111(id)
        .then(111 => {
          dispatch(actionsFunction.load111Success(111));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  load111Success: function(111) {
    return { type: types.GET_111_SUCCESS, payload: 111 };
  },

  // Load  list
  load111List: function() {
    return function(dispatch) {
      return 111Api
        .get111List()
        .then(list => {
          dispatch(actionsFunction.load111ListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  load111ListSuccess: function(list) {
    return { type: types.LIST_111_SUCCESS, payload: list };
  },

	
  // Save 111
  save111: function(111) {
    return function(dispatch) {
      return 111Api
        .save111(111)
        .then(111 => {
          dispatch(actionsFunction.save111Success(111));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  save111Success: function(111) {
    return { type: types.UPDATE_111_SUCCESS, payload: 111 };
  },


};

export default actionsFunction;
